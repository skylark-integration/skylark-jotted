{"version":3,"sources":["skylark-jotted.js"],"names":["define","extend","obj","defaults","extended","Object","keys","forEach","key","seqRunner","index","params","arr","errors","callback","err","res","push","length","apply","this","arguments","hasClass","node","className","tempClass","indexOf","defaultModemap","html","css","js","less","styl","coffee","fetch","url","xhr","window","XMLHttpRequest","open","responseType","onload","status","responseText","onerror","send","seq","debounce","fn","delay","cooldown","multiple","clearTimeout","setTimeout","log","console","getMode","type","file","customModemap","modemap","keyLength","slice","data","attr","getAttribute","addClass","removeClass","spaceBefore","spaceAfter","replace","container","paneActiveClass","containerClass","hasFileClass","editorClass","editorContent","fileUrl","statusMessage","statusClass","statusActiveClass","pluginClass","name","statusLoading","statusFetchError","util","template","plugins","register","id","plugin","_id","init","_get","Plugin","pluginName","pluginOptions","options","pluginIndex","Error","find","[object Object]","topics","callbacks","query","topic","subscriber","priority","foundTopic","_priority","sort","a","b","call","splice","remover","runList","runCallbacks","c","jotted","supportSrcdoc","document","createElement","$resultFrame","$container","querySelector","addEventListener","domready","bind","on","change","content","frameContent","lastCallback","style","body","script","oldFrameContent","forceRender","$newResultFrame","parentNode","replaceChild","contentWindow","write","close","setAttribute","jsUrl","location","e","source","JSON","parse","runScriptTypes","fragment","innerHTML","typeAttr","$scripts","querySelectorAll","i","removeChild","editor","ace","$editors","$textarea","$aceContainer","appendChild","edit","editorOptions","getSession","setMode","setOptions","$blockScrolling","Infinity","trigger","aceEditor","setValue","editorChange","getValue","lineNumbers","CodeMirror","fromTextArea","setOption","cmEditor","isLess","render","CoffeeScript","isCoffee","compile","stylus","isStylus","Babel","babel","transform","code","marked","autoClear","logCaptureSnippet","capture","toString","$nav","$pane","$output","$input","$inputForm","$clear","submit","history","clear","getMessage","$jottedContainer","historyIndex","contentCache","getIframe","message","snippetlessContent","oldConsoleLog","Function","prototype","parent","postMessage","stringify","$log","inputValue","value","trim","preventDefault","scriptOutput","eval","scrollTop","scrollHeight","gotHistory","selectionStart","keyCode","cache","firstRun","$button","run","panes","title","classChecker","$availablePanes","p","classList","contains","resizablePanes","j","expander","undefined","$paneTitle","add","$paneElement","firstElementChild","insertBefore","firstChild","startExpand","event","filter","pane","target","shift","$previousPane","$relativePixel","parseInt","getComputedStyle","display","startX","clientX","startWidth","parseFloat","mousemove","doDrag","mouseup","stopDrag","previousPane","relativePixel","ppNewWidth","cpNewWidth","maxWidth","width","removeEventListener","PluginRender","PluginScriptless","PluginAce","PluginCodeMirror","PluginLess","PluginCoffeeScript","PluginStylus","PluginBabel","PluginMarkdown","PluginConsole","PluginPlay","PluginPen","skylark","PubSoup","BundlePlugins","Jotted","opts","_private","_set","files","showBlank","runScripts","pubsoup","subscribe","unsubscribe","done","paneActive","markup","off","load","fileIndex","$parent","findFile","$editor","clearStatus","val","cachedContent","errs","statusType","messages","$status","publish","attach","main"],"mappings":"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","file":"../skylark-jotted.js","sourcesContent":["define('skylark-jotted/util',[],function () {\n    'use strict';\n    function extend(obj = {}, defaults = {}) {\n        var extended = {};\n        Object.keys(obj).forEach(function (key) {\n            extended[key] = obj[key];\n        });\n        Object.keys(defaults).forEach(function (key) {\n            if (typeof extended[key] !== 'undefined') {\n                extended[key] = obj[key];\n            } else {\n                extended[key] = defaults[key];\n            }\n        });\n        return extended;\n    }\n    function fetch(url, callback) {\n        var xhr = new window.XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            if (xhr.status === 200) {\n                callback(null, xhr.responseText);\n            } else {\n                callback(url, xhr);\n            }\n        };\n        xhr.onerror = function (err) {\n            callback(err);\n        };\n        xhr.send();\n    }\n    function runCallback(index, params, arr, errors, callback) {\n        return function (err, res) {\n            if (err) {\n                errors.push(err);\n            }\n            index++;\n            if (index < arr.length) {\n                seqRunner(index, res, arr, errors, callback);\n            } else {\n                callback(errors, res);\n            }\n        };\n    }\n    function seqRunner(index, params, arr, errors, callback) {\n        arr[index](params, runCallback.apply(this, arguments));\n    }\n    function seq(arr, params, callback = function () {\n    }) {\n        var errors = [];\n        if (!arr.length) {\n            return callback(errors, params);\n        }\n        seqRunner(0, params, arr, errors, callback);\n    }\n    function debounce(fn, delay) {\n        var cooldown = null;\n        var multiple = null;\n        return function () {\n            if (cooldown) {\n                multiple = true;\n            } else {\n                fn.apply(this, arguments);\n            }\n            clearTimeout(cooldown);\n            cooldown = setTimeout(() => {\n                if (multiple) {\n                    fn.apply(this, arguments);\n                }\n                cooldown = null;\n                multiple = null;\n            }, delay);\n        };\n    }\n    function log() {\n        console.log(arguments);\n    }\n    function hasClass(node, className) {\n        if (!node.className) {\n            return false;\n        }\n        var tempClass = ' ' + node.className + ' ';\n        className = ' ' + className + ' ';\n        if (tempClass.indexOf(className) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    function addClass(node, className) {\n        if (hasClass(node, className)) {\n            return node.className;\n        }\n        if (node.className) {\n            className = ' ' + className;\n        }\n        node.className += className;\n        return node.className;\n    }\n    function removeClass(node, className) {\n        var spaceBefore = ' ' + className;\n        var spaceAfter = className + ' ';\n        if (node.className.indexOf(spaceBefore) !== -1) {\n            node.className = node.className.replace(spaceBefore, '');\n        } else if (node.className.indexOf(spaceAfter) !== -1) {\n            node.className = node.className.replace(spaceAfter, '');\n        } else {\n            node.className = node.className.replace(className, '');\n        }\n        return node.className;\n    }\n    function data(node, attr) {\n        return node.getAttribute('data-' + attr);\n    }\n    var defaultModemap = {\n        'html': 'html',\n        'css': 'css',\n        'js': 'javascript',\n        'less': 'less',\n        'styl': 'stylus',\n        'coffee': 'coffeescript'\n    };\n    function getMode(type = '', file = '', customModemap = {}) {\n        var modemap = extend(customModemap, defaultModemap);\n        for (let key in modemap) {\n            let keyLength = key.length;\n            if (file.slice(-keyLength++) === '.' + key) {\n                return modemap[key];\n            }\n        }\n        for (let key in modemap) {\n            if (type === key) {\n                return modemap[key];\n            }\n        }\n        return type;\n    }\n    return {\n        extend,\n        fetch,\n        seq,\n        debounce,\n        log,\n        getMode,\n        data,\n        hasClass,\n        addClass,\n        removeClass\n    };\n});\ndefine('skylark-jotted/template',[],function () {\n    'use strict';\n    function container() {\n        return `\n    <ul class=\"jotted-nav\">\n      <li class=\"jotted-nav-item jotted-nav-item-result\">\n        <a href=\"#\" data-jotted-type=\"result\">\n          Result\n        </a>\n      </li>\n      <li class=\"jotted-nav-item jotted-nav-item-html\">\n        <a href=\"#\" data-jotted-type=\"html\">\n          HTML\n        </a>\n      </li>\n      <li class=\"jotted-nav-item jotted-nav-item-css\">\n        <a href=\"#\" data-jotted-type=\"css\">\n          CSS\n        </a>\n      </li>\n      <li class=\"jotted-nav-item jotted-nav-item-js\">\n        <a href=\"#\" data-jotted-type=\"js\">\n          JavaScript\n        </a>\n      </li>\n    </ul>\n    <div class=\"jotted-pane jotted-pane-result\"><iframe></iframe></div>\n    <div class=\"jotted-pane jotted-pane-html\"></div>\n    <div class=\"jotted-pane jotted-pane-css\"></div>\n    <div class=\"jotted-pane jotted-pane-js\"></div>\n  `;\n    }\n    function paneActiveClass(type) {\n        return `jotted-pane-active-${ type }`;\n    }\n    function containerClass() {\n        return 'jotted';\n    }\n    function hasFileClass(type) {\n        return `jotted-has-${ type }`;\n    }\n    function editorClass(type) {\n        return `jotted-editor jotted-editor-${ type }`;\n    }\n    function editorContent(type, fileUrl = '') {\n        return `\n    <textarea data-jotted-type=\"${ type }\" data-jotted-file=\"${ fileUrl }\"></textarea>\n    <div class=\"jotted-status\"></div>\n  `;\n    }\n    function statusMessage(err) {\n        return `\n    <p>${ err }</p>\n  `;\n    }\n    function statusClass(type) {\n        return `jotted-status-${ type }`;\n    }\n    function statusActiveClass(type) {\n        return `jotted-status-active-${ type }`;\n    }\n    function pluginClass(name) {\n        return `jotted-plugin-${ name }`;\n    }\n    function statusLoading(url) {\n        return `Loading <strong>${ url }</strong>..`;\n    }\n    function statusFetchError(url) {\n        return `There was an error loading <strong>${ url }</strong>.`;\n    }\n    return {\n        container: container,\n        paneActiveClass: paneActiveClass,\n        containerClass: containerClass,\n        hasFileClass: hasFileClass,\n        editorClass: editorClass,\n        editorContent: editorContent,\n        statusMessage: statusMessage,\n        statusClass: statusClass,\n        statusActiveClass: statusActiveClass,\n        pluginClass: pluginClass,\n        statusLoading: statusLoading,\n        statusFetchError: statusFetchError\n    };\n});\ndefine('skylark-jotted/plugin',[\n    './util',\n    './template'\n], function (util, template) {\n    'use strict';\n    var plugins = [];\n    function find(id) {\n        for (let pluginIndex in plugins) {\n            let plugin = plugins[pluginIndex];\n            if (plugin._id === id) {\n                return plugin;\n            }\n        }\n        throw new Error(`Plugin ${ id } is not registered.`);\n    }\n    function register(id, plugin) {\n        plugin._id = id;\n        plugins.push(plugin);\n    }\n    function init() {\n        this._get('options').plugins.forEach(plugin => {\n            let Plugin;\n            let pluginName;\n            let pluginOptions = {};\n            if (typeof plugin === 'string') {\n                pluginName = plugin;\n            } else if (typeof plugin === 'object') {\n                pluginName = plugin.name;\n                pluginOptions = plugin.options || {};\n            }\n            Plugin = find(pluginName);\n            this._get('plugins')[plugin] = new Plugin(this, pluginOptions);\n            util.addClass(this._get('$container'), template.pluginClass(pluginName));\n        });\n    }\n    return {\n        register,\n        init\n    };\n});\ndefine('skylark-jotted/pubsoup',['./util'], function (util) {\n    'use strict';\n    return class PubSoup {\n        constructor() {\n            this.topics = {};\n            this.callbacks = {};\n        }\n        find(query) {\n            this.topics[query] = this.topics[query] || [];\n            return this.topics[query];\n        }\n        subscribe(topic, subscriber, priority = 90) {\n            var foundTopic = this.find(topic);\n            subscriber._priority = priority;\n            foundTopic.push(subscriber);\n            foundTopic.sort(function (a, b) {\n                return a._priority > b._priority ? 1 : b._priority > a._priority ? -1 : 0;\n            });\n        }\n        remover(arr, fn) {\n            arr.forEach(function () {\n                if (!fn) {\n                    arr.length = 0;\n                    return;\n                }\n                var index = [].indexOf.call(arr, fn);\n                if (index === -1) {\n                    return;\n                }\n                arr.splice(index, 1);\n            });\n        }\n        unsubscribe(topic, subscriber) {\n            var foundTopic = this.find(topic);\n            this.remover(foundTopic, subscriber);\n            this.callbacks[topic] = this.callbacks[topic] || [];\n            this.remover(this.callbacks[topic], subscriber);\n        }\n        publish(topic, params = {}) {\n            var foundTopic = this.find(topic);\n            var runList = [];\n            foundTopic.forEach(function (subscriber) {\n                runList.push(subscriber);\n            });\n            util.seq(runList, params, this.runCallbacks(topic));\n        }\n        runCallbacks(topic) {\n            return (err, params) => {\n                this.callbacks[topic] = this.callbacks[topic] || [];\n                this.callbacks[topic].forEach(c => {\n                    c(err, params);\n                });\n            };\n        }\n        done(topic, callback = function () {\n        }) {\n            this.callbacks[topic] = this.callbacks[topic] || [];\n            this.callbacks[topic].push(callback);\n        }\n    };\n});\ndefine('skylark-jotted/plugins/render',['../util'], function (util) {\n    'use strict';\n    return class PluginRender {\n        constructor(jotted, options) {\n            options = util.extend(options, {});\n            var supportSrcdoc = !!('srcdoc' in document.createElement('iframe'));\n            var $resultFrame = jotted.$container.querySelector('.jotted-pane-result iframe');\n            var frameContent = '';\n            var content = {\n                html: '',\n                css: '',\n                js: ''\n            };\n            window.addEventListener('message', this.domready.bind(this));\n            jotted.on('change', this.change.bind(this), 100);\n            this.supportSrcdoc = supportSrcdoc;\n            this.content = content;\n            this.frameContent = frameContent;\n            this.$resultFrame = $resultFrame;\n            this.callbacks = [];\n            this.index = 0;\n            this.lastCallback = () => {\n            };\n        }\n        template(style = '', body = '', script = '') {\n            return `\n      <!doctype html>\n      <html>\n        <head>\n          <script>\n            (function () {\n              window.addEventListener('DOMContentLoaded', function () {\n                window.parent.postMessage(JSON.stringify({\n                  type: 'jotted-dom-ready'\n                }), '*')\n              })\n            }())\n          </script>\n\n          <style>${ style }</style>\n        </head>\n        <body>\n          ${ body }\n\n          <!--\n            Jotted:\n            Empty script tag prevents malformed HTML from breaking the next script.\n          -->\n          <script></script>\n          <script>${ script }</script>\n        </body>\n      </html>\n    `;\n        }\n        change(params, callback) {\n            this.content[params.type] = params.content;\n            var oldFrameContent = this.frameContent;\n            this.frameContent = this.template(this.content['css'], this.content['html'], this.content['js']);\n            this.lastCallback = () => {\n                this.lastCallback = () => {\n                };\n                callback(null, params);\n            };\n            if (params.forceRender !== true && this.frameContent === oldFrameContent) {\n                callback(null, params);\n                return;\n            }\n            if (this.supportSrcdoc) {\n                var $newResultFrame = document.createElement('iframe');\n                this.$resultFrame.parentNode.replaceChild($newResultFrame, this.$resultFrame);\n                this.$resultFrame = $newResultFrame;\n                this.$resultFrame.contentWindow.document.open();\n                this.$resultFrame.contentWindow.document.write(this.frameContent);\n                this.$resultFrame.contentWindow.document.close();\n            } else {\n                this.$resultFrame.setAttribute('data-srcdoc', this.frameContent);\n                var jsUrl = 'javascript:window.frameElement.getAttribute(\"data-srcdoc\");';\n                this.$resultFrame.setAttribute('src', jsUrl);\n                if (this.$resultFrame.contentWindow) {\n                    this.$resultFrame.contentWindow.location = jsUrl;\n                }\n            }\n        }\n        domready(e) {\n            if (e.source !== this.$resultFrame.contentWindow) {\n                return;\n            }\n            var data = {};\n            try {\n                data = JSON.parse(e.data);\n            } catch (e) {\n            }\n            if (data.type === 'jotted-dom-ready') {\n                this.lastCallback();\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/scriptless',['../util'], function (util) {\n    'use strict';\n    return class PluginScriptless {\n        constructor(jotted, options) {\n            options = util.extend(options, {});\n            var runScriptTypes = [\n                'application/javascript',\n                'application/ecmascript',\n                'application/x-ecmascript',\n                'application/x-javascript',\n                'text/ecmascript',\n                'text/javascript',\n                'text/javascript1.0',\n                'text/javascript1.1',\n                'text/javascript1.2',\n                'text/javascript1.3',\n                'text/javascript1.4',\n                'text/javascript1.5',\n                'text/jscript',\n                'text/livescript',\n                'text/x-ecmascript',\n                'text/x-javascript'\n            ];\n            jotted.on('change', this.change.bind(this));\n            this.runScriptTypes = runScriptTypes;\n        }\n        change(params, callback) {\n            if (params.type !== 'html') {\n                return callback(null, params);\n            }\n            var fragment = document.createElement('div');\n            fragment.innerHTML = params.content;\n            var typeAttr = null;\n            var $scripts = fragment.querySelectorAll('script');\n            for (let i = 0; i < $scripts.length; i++) {\n                typeAttr = $scripts[i].getAttribute('type');\n                if (!typeAttr || this.runScriptTypes.indexOf(typeAttr) !== -1) {\n                    $scripts[i].parentNode.removeChild($scripts[i]);\n                }\n            }\n            params.content = fragment.innerHTML;\n            callback(null, params);\n        }\n    };\n});\ndefine('skylark-jotted/plugins/ace',['../util'], function (util) {\n    'use strict';\n    return class PluginAce {\n        constructor(jotted, options) {\n            var priority = 1;\n            var i;\n            this.editor = {};\n            this.jotted = jotted;\n            options = util.extend(options, {});\n            if (typeof window.ace === 'undefined') {\n                return;\n            }\n            var $editors = jotted.$container.querySelectorAll('.jotted-editor');\n            for (i = 0; i < $editors.length; i++) {\n                let $textarea = $editors[i].querySelector('textarea');\n                let type = util.data($textarea, 'jotted-type');\n                let file = util.data($textarea, 'jotted-file');\n                let $aceContainer = document.createElement('div');\n                $editors[i].appendChild($aceContainer);\n                this.editor[type] = window.ace.edit($aceContainer);\n                let editor = this.editor[type];\n                let editorOptions = util.extend(options);\n                editor.getSession().setMode('ace/mode/' + util.getMode(type, file));\n                editor.getSession().setOptions(editorOptions);\n                editor.$blockScrolling = Infinity;\n            }\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        editorChange(params) {\n            return () => {\n                this.jotted.trigger('change', params);\n            };\n        }\n        change(params, callback) {\n            var editor = this.editor[params.type];\n            if (!params.aceEditor) {\n                editor.getSession().setValue(params.content);\n                params.aceEditor = editor;\n                editor.on('change', this.editorChange(params));\n            }\n            params.content = editor.getValue();\n            callback(null, params);\n        }\n    };\n});\ndefine('skylark-jotted/plugins/codemirror',['../util'], function (util) {\n    'use strict';\n    return class PluginCodeMirror {\n        constructor(jotted, options) {\n            var priority = 1;\n            var i;\n            this.editor = {};\n            this.jotted = jotted;\n            var modemap = { 'html': 'htmlmixed' };\n            options = util.extend(options, { lineNumbers: true });\n            if (typeof window.CodeMirror === 'undefined') {\n                return;\n            }\n            var $editors = jotted.$container.querySelectorAll('.jotted-editor');\n            for (i = 0; i < $editors.length; i++) {\n                let $textarea = $editors[i].querySelector('textarea');\n                let type = util.data($textarea, 'jotted-type');\n                let file = util.data($textarea, 'jotted-file');\n                this.editor[type] = window.CodeMirror.fromTextArea($textarea, options);\n                this.editor[type].setOption('mode', util.getMode(type, file, modemap));\n            }\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        editorChange(params) {\n            return () => {\n                this.jotted.trigger('change', params);\n            };\n        }\n        change(params, callback) {\n            var editor = this.editor[params.type];\n            if (!params.cmEditor) {\n                editor.setValue(params.content);\n                params.cmEditor = editor;\n                editor.on('change', this.editorChange(params));\n            }\n            params.content = editor.getValue();\n            callback(null, params);\n        }\n    };\n});\ndefine('skylark-jotted/plugins/less',['../util'], function (util) {\n    'use strict';\n    return class PluginLess {\n        constructor(jotted, options) {\n            var priority = 20;\n            options = util.extend(options, {});\n            if (typeof window.less === 'undefined') {\n                return;\n            }\n            jotted.$container.querySelector('a[data-jotted-type=\"css\"]').innerHTML = 'Less';\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        isLess(params) {\n            if (params.type !== 'css') {\n                return false;\n            }\n            return params.file.indexOf('.less') !== -1 || params.file === '';\n        }\n        change(params, callback) {\n            if (this.isLess(params)) {\n                window.less.render(params.content, this.options, (err, res) => {\n                    if (err) {\n                        return callback(err, params);\n                    } else {\n                        params.content = res.css;\n                    }\n                    callback(null, params);\n                });\n            } else {\n                callback(null, params);\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/coffeescript',['../util'], function (util) {\n    'use strict';\n    return class PluginCoffeeScript {\n        constructor(jotted, options) {\n            var priority = 20;\n            options = util.extend(options, {});\n            if (typeof window.CoffeeScript === 'undefined') {\n                return;\n            }\n            jotted.$container.querySelector('a[data-jotted-type=\"js\"]').innerHTML = 'CoffeeScript';\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        isCoffee(params) {\n            if (params.type !== 'js') {\n                return false;\n            }\n            return params.file.indexOf('.coffee') !== -1 || params.file === '';\n        }\n        change(params, callback) {\n            if (this.isCoffee(params)) {\n                try {\n                    params.content = window.CoffeeScript.compile(params.content);\n                } catch (err) {\n                    return callback(err, params);\n                }\n            }\n            callback(null, params);\n        }\n    };\n});\ndefine('skylark-jotted/plugins/stylus',['../util'], function (util) {\n    'use strict';\n    return class PluginStylus {\n        constructor(jotted, options) {\n            var priority = 20;\n            options = util.extend(options, {});\n            if (typeof window.stylus === 'undefined') {\n                return;\n            }\n            jotted.$container.querySelector('a[data-jotted-type=\"css\"]').innerHTML = 'Stylus';\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        isStylus(params) {\n            if (params.type !== 'css') {\n                return false;\n            }\n            return params.file.indexOf('.styl') !== -1 || params.file === '';\n        }\n        change(params, callback) {\n            if (this.isStylus(params)) {\n                window.stylus(params.content, this.options).render((err, res) => {\n                    if (err) {\n                        return callback(err, params);\n                    } else {\n                        params.content = res;\n                    }\n                    callback(null, params);\n                });\n            } else {\n                callback(null, params);\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/babel',['../util'], function (util) {\n    'use strict';\n    return class PluginBabel {\n        constructor(jotted, options) {\n            var priority = 20;\n            this.options = util.extend(options, {});\n            if (typeof window.Babel !== 'undefined') {\n                this.babel = window.Babel;\n            } else if (typeof window.babel !== 'undefined') {\n                this.babel = { transform: window.babel };\n            } else {\n                return;\n            }\n            jotted.$container.querySelector('a[data-jotted-type=\"js\"]').innerHTML = 'ES2015';\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        change(params, callback) {\n            if (params.type === 'js') {\n                try {\n                    params.content = this.babel.transform(params.content, this.options).code;\n                } catch (err) {\n                    return callback(err, params);\n                }\n                callback(null, params);\n            } else {\n                callback(null, params);\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/markdown',['../util'], function (util) {\n    'use strict';\n    return class PluginMarkdown {\n        constructor(jotted, options) {\n            var priority = 20;\n            this.options = util.extend(options, {});\n            if (typeof window.marked === 'undefined') {\n                return;\n            }\n            window.marked.setOptions(options);\n            jotted.$container.querySelector('a[data-jotted-type=\"html\"]').innerHTML = 'Markdown';\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        change(params, callback) {\n            if (params.type === 'html') {\n                try {\n                    params.content = window.marked(params.content);\n                } catch (err) {\n                    return callback(err, params);\n                }\n                callback(null, params);\n            } else {\n                callback(null, params);\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/console',['../util'], function (util) {\n    'use strict';\n    return class PluginConsole {\n        constructor(jotted, options) {\n            options = util.extend(options, { autoClear: false });\n            var priority = 30;\n            var history = [];\n            var historyIndex = 0;\n            var logCaptureSnippet = `(${ this.capture.toString() })();`;\n            var contentCache = {\n                html: '',\n                css: '',\n                js: ''\n            };\n            var $nav = document.createElement('li');\n            util.addClass($nav, 'jotted-nav-item jotted-nav-item-console');\n            $nav.innerHTML = '<a href=\"#\" data-jotted-type=\"console\">JS Console</a>';\n            var $pane = document.createElement('div');\n            util.addClass($pane, 'jotted-pane jotted-pane-console');\n            $pane.innerHTML = `\n      <div class=\"jotted-console-container\">\n        <ul class=\"jotted-console-output\"></ul>\n        <form class=\"jotted-console-input\">\n          <input type=\"text\">\n        </form>\n      </div>\n      <button class=\"jotted-button jotted-console-clear\">Clear</button>\n    `;\n            jotted.$container.appendChild($pane);\n            jotted.$container.querySelector('.jotted-nav').appendChild($nav);\n            var $container = jotted.$container.querySelector('.jotted-console-container');\n            var $output = jotted.$container.querySelector('.jotted-console-output');\n            var $input = jotted.$container.querySelector('.jotted-console-input input');\n            var $inputForm = jotted.$container.querySelector('.jotted-console-input');\n            var $clear = jotted.$container.querySelector('.jotted-console-clear');\n            $inputForm.addEventListener('submit', this.submit.bind(this));\n            $input.addEventListener('keydown', this.history.bind(this));\n            $clear.addEventListener('click', this.clear.bind(this));\n            if (options.autoClear === true) {\n                jotted.on('change', this.autoClear.bind(this), priority - 1);\n            }\n            jotted.on('change', this.change.bind(this), priority);\n            window.addEventListener('message', this.getMessage.bind(this));\n            this.$jottedContainer = jotted.$container;\n            this.$container = $container;\n            this.$input = $input;\n            this.$output = $output;\n            this.history = history;\n            this.historyIndex = historyIndex;\n            this.logCaptureSnippet = logCaptureSnippet;\n            this.contentCache = contentCache;\n            this.getIframe = this.getIframe.bind(this);\n        }\n        getIframe() {\n            return this.$jottedContainer.querySelector('.jotted-pane-result iframe');\n        }\n        getMessage(e) {\n            if (e.source !== this.getIframe().contentWindow) {\n                return;\n            }\n            var data = {};\n            try {\n                data = JSON.parse(e.data);\n            } catch (err) {\n            }\n            if (data.type === 'jotted-console-log') {\n                this.log(data.message);\n            }\n        }\n        autoClear(params, callback) {\n            var snippetlessContent = params.content;\n            if (params.type === 'js') {\n                snippetlessContent = snippetlessContent.replace(this.logCaptureSnippet, '');\n            }\n            if (params.forceRender === true || this.contentCache[params.type] !== snippetlessContent) {\n                this.clear();\n            }\n            this.contentCache[params.type] = snippetlessContent;\n            callback(null, params);\n        }\n        change(params, callback) {\n            if (params.type !== 'js') {\n                return callback(null, params);\n            }\n            if (params.content.indexOf(this.logCaptureSnippet) === -1) {\n                params.content = `${ this.logCaptureSnippet }${ params.content }`;\n            }\n            callback(null, params);\n        }\n        capture() {\n            if (typeof window.console === 'undefined' || typeof window.console.log === 'undefined') {\n                window.console = {\n                    log: function () {\n                    }\n                };\n            }\n            var oldConsoleLog = Function.prototype.bind.call(window.console.log, window.console);\n            window.console.log = function () {\n                [].slice.call(arguments).forEach(function (message) {\n                    window.parent.postMessage(JSON.stringify({\n                        type: 'jotted-console-log',\n                        message: message\n                    }), '*');\n                });\n                oldConsoleLog.apply(oldConsoleLog, arguments);\n            };\n        }\n        log(message = '', type) {\n            var $log = document.createElement('li');\n            util.addClass($log, 'jotted-console-log');\n            if (typeof type !== 'undefined') {\n                util.addClass($log, `jotted-console-log-${ type }`);\n            }\n            $log.innerHTML = message;\n            this.$output.appendChild($log);\n        }\n        submit(e) {\n            var inputValue = this.$input.value.trim();\n            if (inputValue === '') {\n                return e.preventDefault();\n            }\n            this.history.push(inputValue);\n            this.historyIndex = this.history.length;\n            this.log(inputValue, 'history');\n            if (inputValue.indexOf('return') !== 0) {\n                inputValue = 'return ' + inputValue;\n            }\n            try {\n                var scriptOutput = this.getIframe().contentWindow.eval(`(function() {${ inputValue }})()`);\n                this.log(scriptOutput);\n            } catch (err) {\n                this.log(err, 'error');\n            }\n            this.$input.value = '';\n            this.$container.scrollTop = this.$container.scrollHeight;\n            e.preventDefault();\n        }\n        clear() {\n            this.$output.innerHTML = '';\n        }\n        history(e) {\n            var UP = 38;\n            var DOWN = 40;\n            var gotHistory = false;\n            var selectionStart = this.$input.selectionStart;\n            if (e.keyCode === UP && this.historyIndex !== 0 && selectionStart === 0) {\n                this.historyIndex--;\n                gotHistory = true;\n            }\n            if (e.keyCode === DOWN && this.historyIndex !== this.history.length - 1 && selectionStart === this.$input.value.length) {\n                this.historyIndex++;\n                gotHistory = true;\n            }\n            if (gotHistory) {\n                this.$input.value = this.history[this.historyIndex];\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/play',['../util'], function (util) {\n    'use strict';\n    return class PluginPlay {\n        constructor(jotted, options) {\n            options = util.extend(options, { firstRun: true });\n            var priority = 10;\n            var cache = {};\n            var code = {};\n            if (options.firstRun === false) {\n                cache = {\n                    html: {\n                        type: 'html',\n                        content: ''\n                    },\n                    css: {\n                        type: 'css',\n                        content: ''\n                    },\n                    js: {\n                        type: 'js',\n                        content: ''\n                    }\n                };\n            }\n            var $button = document.createElement('button');\n            $button.className = 'jotted-button jotted-button-play';\n            $button.innerHTML = 'Run';\n            jotted.$container.appendChild($button);\n            $button.addEventListener('click', this.run.bind(this));\n            jotted.on('change', this.change.bind(this), priority);\n            this.cache = cache;\n            this.code = code;\n            this.jotted = jotted;\n        }\n        change(params, callback) {\n            this.code[params.type] = util.extend(params);\n            if (typeof this.cache[params.type] !== 'undefined') {\n                callback(null, this.cache[params.type]);\n                this.cache[params.type].forceRender = null;\n            } else {\n                this.cache[params.type] = util.extend(params);\n                callback(null, params);\n            }\n        }\n        run() {\n            for (let type in this.code) {\n                this.cache[type] = util.extend(this.code[type], { forceRender: true });\n                this.jotted.trigger('change', this.cache[type]);\n            }\n        }\n    };\n});\ndefine('skylark-jotted/plugins/pen',[],function () {\n    'use strict';\n    return class PluginPen {\n        constructor(jotted, options) {\n            let panes = {\n                html: {\n                    title: 'HTML',\n                    classChecker: 'jotted-has-html'\n                },\n                css: {\n                    title: 'CSS',\n                    classChecker: 'jotted-has-css'\n                },\n                js: {\n                    title: 'JavaScript',\n                    classChecker: 'jotted-has-js'\n                },\n                console: {\n                    title: 'Console',\n                    classChecker: 'jotted-plugin-console'\n                }\n            };\n            let $availablePanes = [];\n            for (let p in panes) {\n                if (jotted.$container.classList.contains(panes[p].classChecker)) {\n                    $availablePanes.push(jotted.$container.querySelector(`.jotted-pane-${ p }`));\n                }\n            }\n            this.resizablePanes = [];\n            for (let i = 0; i < $availablePanes.length; i++) {\n                let type;\n                for (let j = 0; j < $availablePanes[i].classList.length; j++) {\n                    if ($availablePanes[i].classList[j].indexOf('jotted-pane-') !== -1) {\n                        type = $availablePanes[i].classList[j].replace('jotted-pane-', '');\n                        break;\n                    }\n                }\n                if (!type) {\n                    continue;\n                }\n                let $pane = {\n                    container: $availablePanes[i],\n                    expander: undefined\n                };\n                this.resizablePanes.push($pane);\n                let $paneTitle = document.createElement('div');\n                $paneTitle.classList.add('jotted-pane-title');\n                $paneTitle.innerHTML = panes[type].title || type;\n                let $paneElement = $availablePanes[i].firstElementChild;\n                $paneElement.insertBefore($paneTitle, $paneElement.firstChild);\n                if (i > 0) {\n                    $pane.expander = document.createElement('div');\n                    $pane.expander.classList.add('jotted-plugin-pen-expander');\n                    $pane.expander.addEventListener('mousedown', this.startExpand.bind(this, jotted));\n                    $paneElement.insertBefore($pane.expander, $paneTitle);\n                }\n            }\n        }\n        startExpand(jotted, event) {\n            let $pane = this.resizablePanes.filter(pane => {\n                return pane.expander === event.target;\n            }).shift();\n            let $previousPane = this.resizablePanes[this.resizablePanes.indexOf($pane) - 1];\n            let $relativePixel = 100 / parseInt(window.getComputedStyle($pane.container.parentNode)['width'], 10);\n            $pane.container.parentNode.style.display = 'none';\n            $pane.startX = event.clientX;\n            $pane.startWidth = parseFloat(window.getComputedStyle($pane.container)['width'], 10);\n            $previousPane.startWidth = parseFloat(window.getComputedStyle($previousPane.container)['width'], 10);\n            $pane.container.parentNode.style.display = '';\n            $pane.mousemove = this.doDrag.bind(this, $pane, $previousPane, $relativePixel);\n            $pane.mouseup = this.stopDrag.bind(this, $pane);\n            document.addEventListener('mousemove', $pane.mousemove, false);\n            document.addEventListener('mouseup', $pane.mouseup, false);\n        }\n        doDrag(pane, previousPane, relativePixel, event) {\n            let ppNewWidth = previousPane.startWidth + (event.clientX - pane.startX) * relativePixel;\n            let cpNewWidth = pane.startWidth - (event.clientX - pane.startX) * relativePixel;\n            const PANE_MIN_SIZE = 10;\n            if (ppNewWidth >= PANE_MIN_SIZE && cpNewWidth >= PANE_MIN_SIZE) {\n                pane.container.style.maxWidth = 'none';\n                previousPane.container.style.maxWidth = 'none';\n                previousPane.container.style.width = `${ ppNewWidth }%`;\n                pane.container.style.width = `${ cpNewWidth }%`;\n            }\n        }\n        stopDrag(pane, event) {\n            document.removeEventListener('mousemove', pane.mousemove, false);\n            document.removeEventListener('mouseup', pane.mouseup, false);\n        }\n    };\n});\ndefine('skylark-jotted/bundle-plugins',[\n    './plugins/render',\n    './plugins/scriptless',\n    './plugins/ace',\n    './plugins/codemirror',\n    './plugins/less',\n    './plugins/coffeescript',\n    './plugins/stylus',\n    './plugins/babel',\n    './plugins/markdown',\n    './plugins/console',\n    './plugins/play',\n    './plugins/pen'\n], function (PluginRender, PluginScriptless, PluginAce, PluginCodeMirror, PluginLess, PluginCoffeeScript, PluginStylus, PluginBabel, PluginMarkdown, PluginConsole, PluginPlay, PluginPen) {\n    'use strict';\n    return function BundlePlugins(jotted) {\n        jotted.plugin('render', PluginRender);\n        jotted.plugin('scriptless', PluginScriptless);\n        jotted.plugin('ace', PluginAce);\n        jotted.plugin('codemirror', PluginCodeMirror);\n        jotted.plugin('less', PluginLess);\n        jotted.plugin('coffeescript', PluginCoffeeScript);\n        jotted.plugin('stylus', PluginStylus);\n        jotted.plugin('babel', PluginBabel);\n        jotted.plugin('markdown', PluginMarkdown);\n        jotted.plugin('console', PluginConsole);\n        jotted.plugin('play', PluginPlay);\n        jotted.plugin('pen', PluginPen);\n    };\n});\ndefine('skylark-jotted/Jotted',[\n    'skylark-langx/skylark',\n    './util',\n    './template',\n    './plugin',\n    './pubsoup',\n    './bundle-plugins'\n], function (skylark, util, template, plugin, PubSoup, BundlePlugins) {\n    'use strict';\n    class Jotted {\n        constructor($jottedContainer, opts) {\n            if (!$jottedContainer) {\n                throw new Error(\"Can't find Jotted container.\");\n            }\n            var _private = {};\n            this._get = function (key) {\n                return _private[key];\n            };\n            this._set = function (key, value) {\n                _private[key] = value;\n                return _private[key];\n            };\n            var options = this._set('options', util.extend(opts, {\n                files: [],\n                showBlank: false,\n                runScripts: true,\n                pane: 'result',\n                debounce: 250,\n                plugins: []\n            }));\n            options.plugins.push('render');\n            if (options.runScripts === false) {\n                options.plugins.push('scriptless');\n            }\n            this._set('cachedContent', {\n                html: null,\n                css: null,\n                js: null\n            });\n            var pubsoup = this._set('pubsoup', new PubSoup());\n            this._set('trigger', this.trigger());\n            this._set('on', function () {\n                pubsoup.subscribe.apply(pubsoup, arguments);\n            });\n            this._set('off', function () {\n                pubsoup.unsubscribe.apply(pubsoup, arguments);\n            });\n            var done = this._set('done', function () {\n                pubsoup.done.apply(pubsoup, arguments);\n            });\n            done('change', this.errors.bind(this));\n            var $container = this._set('$container', $jottedContainer);\n            $container.innerHTML = template.container();\n            util.addClass($container, template.containerClass());\n            var paneActive = this._set('paneActive', options.pane);\n            util.addClass($container, template.paneActiveClass(paneActive));\n            this._set('$status', {});\n            for (let type of [\n                    'html',\n                    'css',\n                    'js'\n                ]) {\n                this.markup(type);\n            }\n            $container.addEventListener('keyup', util.debounce(this.change.bind(this), options.debounce));\n            $container.addEventListener('change', util.debounce(this.change.bind(this), options.debounce));\n            $container.addEventListener('click', this.pane.bind(this));\n            this.$container = this._get('$container');\n            this.on = this._get('on');\n            this.off = this._get('off');\n            this.done = this._get('done');\n            this.trigger = this._get('trigger');\n            this.paneActive = this._get('paneActive');\n            this._set('plugins', {});\n            plugin.init.call(this);\n            for (let type of [\n                    'html',\n                    'css',\n                    'js'\n                ]) {\n                this.load(type);\n            }\n            if (options.showBlank) {\n                for (let type of [\n                        'html',\n                        'css',\n                        'js'\n                    ]) {\n                    util.addClass($container, template.hasFileClass(type));\n                }\n            }\n        }\n        findFile(type) {\n            var file = {};\n            var options = this._get('options');\n            for (let fileIndex in options.files) {\n                let file = options.files[fileIndex];\n                if (file.type === type) {\n                    return file;\n                }\n            }\n            return file;\n        }\n        markup(type) {\n            var $container = this._get('$container');\n            var $parent = $container.querySelector(`.jotted-pane-${ type }`);\n            var file = this.findFile(type);\n            var $editor = document.createElement('div');\n            $editor.innerHTML = template.editorContent(type, file.url);\n            $editor.className = template.editorClass(type);\n            $parent.appendChild($editor);\n            this._get('$status')[type] = $parent.querySelector('.jotted-status');\n            if (typeof file.url !== 'undefined' || typeof file.content !== 'undefined') {\n                util.addClass($container, template.hasFileClass(type));\n            }\n        }\n        load(type) {\n            var file = this.findFile(type);\n            var $textarea = this._get('$container').querySelector(`.jotted-pane-${ type } textarea`);\n            if (typeof file.content !== 'undefined') {\n                this.setValue($textarea, file.content);\n            } else if (typeof file.url !== 'undefined') {\n                this.status('loading', [template.statusLoading(file.url)], {\n                    type: type,\n                    file: file\n                });\n                util.fetch(file.url, (err, res) => {\n                    if (err) {\n                        this.status('error', [template.statusFetchError(err)], { type: type });\n                        return;\n                    }\n                    this.clearStatus('loading', { type: type });\n                    this.setValue($textarea, res);\n                });\n            } else {\n                this.setValue($textarea, '');\n            }\n        }\n        setValue($textarea, val) {\n            $textarea.value = val;\n            this.change({ target: $textarea });\n        }\n        change(e) {\n            var type = util.data(e.target, 'jotted-type');\n            if (!type) {\n                return;\n            }\n            var cachedContent = this._get('cachedContent');\n            if (cachedContent[type] === e.target.value) {\n                return;\n            }\n            cachedContent[type] = e.target.value;\n            this.trigger('change', {\n                type: type,\n                file: util.data(e.target, 'jotted-file'),\n                content: cachedContent[type]\n            });\n        }\n        errors(errs, params) {\n            this.status('error', errs, params);\n        }\n        pane(e) {\n            if (!util.data(e.target, 'jotted-type')) {\n                return;\n            }\n            var $container = this._get('$container');\n            var paneActive = this._get('paneActive');\n            util.removeClass($container, template.paneActiveClass(paneActive));\n            paneActive = this._set('paneActive', util.data(e.target, 'jotted-type'));\n            util.addClass($container, template.paneActiveClass(paneActive));\n            e.preventDefault();\n        }\n        status(statusType = 'error', messages = [], params = {}) {\n            if (!messages.length) {\n                return this.clearStatus(statusType, params);\n            }\n            var $status = this._get('$status');\n            util.addClass($status[params.type], template.statusClass(statusType));\n            util.addClass(this._get('$container'), template.statusActiveClass(params.type));\n            var markup = '';\n            messages.forEach(function (err) {\n                markup += template.statusMessage(err);\n            });\n            $status[params.type].innerHTML = markup;\n        }\n        clearStatus(statusType, params) {\n            var $status = this._get('$status');\n            util.removeClass($status[params.type], template.statusClass(statusType));\n            util.removeClass(this._get('$container'), template.statusActiveClass(params.type));\n            $status[params.type].innerHTML = '';\n        }\n        trigger() {\n            var options = this._get('options');\n            var pubsoup = this._get('pubsoup');\n            if (options.debounce === false) {\n                return function () {\n                    pubsoup.publish.apply(pubsoup, arguments);\n                };\n            }\n            var cooldown = {};\n            var multiple = {};\n            return function (topic, {\n                type = 'default'\n            } = {}) {\n                if (cooldown[type]) {\n                    multiple[type] = true;\n                } else {\n                    pubsoup.publish.apply(pubsoup, arguments);\n                }\n                clearTimeout(cooldown[type]);\n                cooldown[type] = setTimeout(() => {\n                    if (multiple[type]) {\n                        pubsoup.publish.apply(pubsoup, arguments);\n                    }\n                    multiple[type] = null;\n                    cooldown[type] = null;\n                }, options.debounce);\n            };\n        }\n    }\n    Jotted.plugin = function () {\n        return plugin.register.apply(this, arguments);\n    };\n    BundlePlugins(Jotted);\n    return skylark.attach(\"itg.Jotted\",Jotted);\n});\ndefine('skylark-jotted/main',[\r\n\t\"./Jotted\"\r\n],function(Jotted){\r\n\r\n\treturn Jotted;\r\n});\ndefine('skylark-jotted', ['skylark-jotted/main'], function (main) { return main; });\n\n"]}