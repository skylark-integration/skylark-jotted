{"version":3,"sources":["plugins/ace.js"],"names":["define","ace","util","[object Object]","jotted","options","i","this","editor","extend","$editors","$container","querySelectorAll","length","$textarea","querySelector","type","data","file","$aceContainer","document","createElement","appendChild","edit","editorOptions","getSession","setMode","getMode","setOptions","$blockScrolling","Infinity","on","change","bind","params","trigger","callback","aceEditor","setValue","content","editorChange","getValue"],"mappings":";;;;;;;AAAAA,QACI,cACA,WACD,SAAUC,EAAIC,GACb,aACA,aACIC,YAAYC,EAAQC,GAChB,IACIC,EACJC,KAAKC,UACLD,KAAKH,OAASA,EACdC,EAAUH,EAAKO,OAAOJ,MAItB,IAAIK,EAAWN,EAAOO,WAAWC,iBAAiB,kBAClD,IAAKN,EAAI,EAAGA,EAAII,EAASG,OAAQP,IAAK,CAClC,IAAIQ,EAAYJ,EAASJ,GAAGS,cAAc,YACtCC,EAAOd,EAAKe,KAAKH,EAAW,eAC5BI,EAAOhB,EAAKe,KAAKH,EAAW,eAC5BK,EAAgBC,SAASC,cAAc,OAC3CX,EAASJ,GAAGgB,YAAYH,GACxBZ,KAAKC,OAAOQ,GAAQf,EAAIsB,KAAKJ,GAC7B,IAAIX,EAASD,KAAKC,OAAOQ,GACrBQ,EAAgBtB,EAAKO,OAAOJ,GAChCG,EAAOiB,aAAaC,QAAQ,YAAcxB,EAAKyB,QAAQX,EAAME,IAC7DV,EAAOiB,aAAaG,WAAWJ,GAC/BhB,EAAOqB,gBAAkBC,EAAAA,EAE7B1B,EAAO2B,GAAG,SAAUxB,KAAKyB,OAAOC,KAAK1B,MAtBtB,GAwBnBJ,aAAa+B,GACT,MAAO,KACH3B,KAAKH,OAAO+B,QAAQ,SAAUD,IAGtC/B,OAAO+B,EAAQE,GACX,IAAI5B,EAASD,KAAKC,OAAO0B,EAAOlB,MAC3BkB,EAAOG,YACR7B,EAAOiB,aAAaa,SAASJ,EAAOK,SACpCL,EAAOG,UAAY7B,EACnBA,EAAOuB,GAAG,SAAUxB,KAAKiC,aAAaN,KAE1CA,EAAOK,QAAU/B,EAAOiC,WACxBL,EAAS,KAAMF","file":"../../plugins/ace.js","sourcesContent":["define([\n    'skylark-ace',\n    '../util'\n], function (ace,util) {\n    'use strict';\n    return class PluginAce {\n        constructor(jotted, options) {\n            var priority = 1;\n            var i;\n            this.editor = {};\n            this.jotted = jotted;\n            options = util.extend(options, {});\n            //if (typeof window.ace === 'undefined') {\n            //    return;\n            // }\n            var $editors = jotted.$container.querySelectorAll('.jotted-editor');\n            for (i = 0; i < $editors.length; i++) {\n                let $textarea = $editors[i].querySelector('textarea');\n                let type = util.data($textarea, 'jotted-type');\n                let file = util.data($textarea, 'jotted-file');\n                let $aceContainer = document.createElement('div');\n                $editors[i].appendChild($aceContainer);\n                this.editor[type] = ace.edit($aceContainer);\n                let editor = this.editor[type];\n                let editorOptions = util.extend(options);\n                editor.getSession().setMode('ace/mode/' + util.getMode(type, file));\n                editor.getSession().setOptions(editorOptions);\n                editor.$blockScrolling = Infinity;\n            }\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        editorChange(params) {\n            return () => {\n                this.jotted.trigger('change', params);\n            };\n        }\n        change(params, callback) {\n            var editor = this.editor[params.type];\n            if (!params.aceEditor) {\n                editor.getSession().setValue(params.content);\n                params.aceEditor = editor;\n                editor.on('change', this.editorChange(params));\n            }\n            params.content = editor.getValue();\n            callback(null, params);\n        }\n    };\n});"]}