{"version":3,"sources":["plugins/codemirror.js"],"names":["define","util","[object Object]","jotted","options","i","this","editor","modemap","html","extend","lineNumbers","window","CodeMirror","$editors","$container","querySelectorAll","length","$textarea","querySelector","type","data","file","fromTextArea","setOption","getMode","on","change","bind","params","trigger","callback","cmEditor","setValue","content","editorChange","getValue"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,SAAUC,GAC1B,aACA,aACIC,YAAYC,EAAQC,GAChB,IACIC,EACJC,KAAKC,UACLD,KAAKH,OAASA,EACd,IAAIK,GAAYC,KAAQ,aAExB,GADAL,EAAUH,EAAKS,OAAON,GAAWO,aAAa,SACb,IAAtBC,OAAOC,WAAlB,CAGA,IAAIC,EAAWX,EAAOY,WAAWC,iBAAiB,kBAClD,IAAKX,EAAI,EAAGA,EAAIS,EAASG,OAAQZ,IAAK,CAClC,IAAIa,EAAYJ,EAAST,GAAGc,cAAc,YACtCC,EAAOnB,EAAKoB,KAAKH,EAAW,eAC5BI,EAAOrB,EAAKoB,KAAKH,EAAW,eAChCZ,KAAKC,OAAOa,GAAQR,OAAOC,WAAWU,aAAaL,EAAWd,GAC9DE,KAAKC,OAAOa,GAAMI,UAAU,OAAQvB,EAAKwB,QAAQL,EAAME,EAAMd,IAEjEL,EAAOuB,GAAG,SAAUpB,KAAKqB,OAAOC,KAAKtB,MAjBtB,IAmBnBJ,aAAa2B,GACT,MAAO,KACHvB,KAAKH,OAAO2B,QAAQ,SAAUD,IAGtC3B,OAAO2B,EAAQE,GACX,IAAIxB,EAASD,KAAKC,OAAOsB,EAAOT,MAC3BS,EAAOG,WACRzB,EAAO0B,SAASJ,EAAOK,SACvBL,EAAOG,SAAWzB,EAClBA,EAAOmB,GAAG,SAAUpB,KAAK6B,aAAaN,KAE1CA,EAAOK,QAAU3B,EAAO6B,WACxBL,EAAS,KAAMF","file":"../../plugins/codemirror.js","sourcesContent":["define(['../util'], function (util) {\n    'use strict';\n    return class PluginCodeMirror {\n        constructor(jotted, options) {\n            var priority = 1;\n            var i;\n            this.editor = {};\n            this.jotted = jotted;\n            var modemap = { 'html': 'htmlmixed' };\n            options = util.extend(options, { lineNumbers: true });\n            if (typeof window.CodeMirror === 'undefined') {\n                return;\n            }\n            var $editors = jotted.$container.querySelectorAll('.jotted-editor');\n            for (i = 0; i < $editors.length; i++) {\n                let $textarea = $editors[i].querySelector('textarea');\n                let type = util.data($textarea, 'jotted-type');\n                let file = util.data($textarea, 'jotted-file');\n                this.editor[type] = window.CodeMirror.fromTextArea($textarea, options);\n                this.editor[type].setOption('mode', util.getMode(type, file, modemap));\n            }\n            jotted.on('change', this.change.bind(this), priority);\n        }\n        editorChange(params) {\n            return () => {\n                this.jotted.trigger('change', params);\n            };\n        }\n        change(params, callback) {\n            var editor = this.editor[params.type];\n            if (!params.cmEditor) {\n                editor.setValue(params.content);\n                params.cmEditor = editor;\n                editor.on('change', this.editorChange(params));\n            }\n            params.content = editor.getValue();\n            callback(null, params);\n        }\n    };\n});"]}