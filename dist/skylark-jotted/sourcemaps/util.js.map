{"version":3,"sources":["util.js"],"names":["define","extend","obj","defaults","extended","Object","keys","forEach","key","seqRunner","index","params","arr","errors","callback","err","res","push","length","apply","this","arguments","hasClass","node","className","indexOf","defaultModemap","html","css","js","less","styl","coffee","fetch","url","xhr","window","XMLHttpRequest","open","responseType","onload","status","responseText","onerror","send","seq","debounce","fn","delay","cooldown","multiple","clearTimeout","setTimeout","log","console","getMode","type","file","customModemap","modemap","keyLength","slice","data","attr","getAttribute","addClass","removeClass","spaceBefore","spaceAfter","replace"],"mappings":"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","file":"../util.js","sourcesContent":["define(function () {\n    'use strict';\n    function extend(obj = {}, defaults = {}) {\n        var extended = {};\n        Object.keys(obj).forEach(function (key) {\n            extended[key] = obj[key];\n        });\n        Object.keys(defaults).forEach(function (key) {\n            if (typeof extended[key] !== 'undefined') {\n                extended[key] = obj[key];\n            } else {\n                extended[key] = defaults[key];\n            }\n        });\n        return extended;\n    }\n    function fetch(url, callback) {\n        var xhr = new window.XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            if (xhr.status === 200) {\n                callback(null, xhr.responseText);\n            } else {\n                callback(url, xhr);\n            }\n        };\n        xhr.onerror = function (err) {\n            callback(err);\n        };\n        xhr.send();\n    }\n    function runCallback(index, params, arr, errors, callback) {\n        return function (err, res) {\n            if (err) {\n                errors.push(err);\n            }\n            index++;\n            if (index < arr.length) {\n                seqRunner(index, res, arr, errors, callback);\n            } else {\n                callback(errors, res);\n            }\n        };\n    }\n    function seqRunner(index, params, arr, errors, callback) {\n        arr[index](params, runCallback.apply(this, arguments));\n    }\n    function seq(arr, params, callback = function () {\n    }) {\n        var errors = [];\n        if (!arr.length) {\n            return callback(errors, params);\n        }\n        seqRunner(0, params, arr, errors, callback);\n    }\n    function debounce(fn, delay) {\n        var cooldown = null;\n        var multiple = null;\n        return function () {\n            if (cooldown) {\n                multiple = true;\n            } else {\n                fn.apply(this, arguments);\n            }\n            clearTimeout(cooldown);\n            cooldown = setTimeout(() => {\n                if (multiple) {\n                    fn.apply(this, arguments);\n                }\n                cooldown = null;\n                multiple = null;\n            }, delay);\n        };\n    }\n    function log() {\n        console.log(arguments);\n    }\n    function hasClass(node, className) {\n        if (!node.className) {\n            return false;\n        }\n        var tempClass = ' ' + node.className + ' ';\n        className = ' ' + className + ' ';\n        if (tempClass.indexOf(className) !== -1) {\n            return true;\n        }\n        return false;\n    }\n    function addClass(node, className) {\n        if (hasClass(node, className)) {\n            return node.className;\n        }\n        if (node.className) {\n            className = ' ' + className;\n        }\n        node.className += className;\n        return node.className;\n    }\n    function removeClass(node, className) {\n        var spaceBefore = ' ' + className;\n        var spaceAfter = className + ' ';\n        if (node.className.indexOf(spaceBefore) !== -1) {\n            node.className = node.className.replace(spaceBefore, '');\n        } else if (node.className.indexOf(spaceAfter) !== -1) {\n            node.className = node.className.replace(spaceAfter, '');\n        } else {\n            node.className = node.className.replace(className, '');\n        }\n        return node.className;\n    }\n    function data(node, attr) {\n        return node.getAttribute('data-' + attr);\n    }\n    var defaultModemap = {\n        'html': 'html',\n        'css': 'css',\n        'js': 'javascript',\n        'less': 'less',\n        'styl': 'stylus',\n        'coffee': 'coffeescript'\n    };\n    function getMode(type = '', file = '', customModemap = {}) {\n        var modemap = extend(customModemap, defaultModemap);\n        for (let key in modemap) {\n            let keyLength = key.length;\n            if (file.slice(-keyLength++) === '.' + key) {\n                return modemap[key];\n            }\n        }\n        for (let key in modemap) {\n            if (type === key) {\n                return modemap[key];\n            }\n        }\n        return type;\n    }\n    return {\n        extend,\n        fetch,\n        seq,\n        debounce,\n        log,\n        getMode,\n        data,\n        hasClass,\n        addClass,\n        removeClass\n    };\n});"]}